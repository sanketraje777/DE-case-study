[2025-06-06T10:08:54.797+0000] {local_task_job_runner.py:120} INFO - ::group::Pre task execution logs
[2025-06-06T10:08:57.033+0000] {taskinstance.py:2076} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: etl_landing.tg_salesorder.tg_process_salesorder.process_salesorder scheduled__2025-06-05T00:00:00+00:00 map_index=1 [queued]>
[2025-06-06T10:08:57.241+0000] {taskinstance.py:2076} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: etl_landing.tg_salesorder.tg_process_salesorder.process_salesorder scheduled__2025-06-05T00:00:00+00:00 map_index=1 [queued]>
[2025-06-06T10:08:57.257+0000] {taskinstance.py:2306} INFO - Starting attempt 1 of 1
[2025-06-06T10:08:57.395+0000] {taskinstance.py:2330} INFO - Executing <Mapped(_PythonDecoratedOperator): tg_salesorder.tg_process_salesorder.process_salesorder> on 2025-06-05 00:00:00+00:00
[2025-06-06T10:08:57.509+0000] {logging_mixin.py:188} WARNING - /home/airflow/.local/lib/python3.12/site-packages/airflow/task/task_runner/standard_task_runner.py:61 DeprecationWarning: This process (pid=328) is multi-threaded, use of fork() may lead to deadlocks in the child.
[2025-06-06T10:08:57.546+0000] {standard_task_runner.py:63} INFO - Started process 369 to run task
[2025-06-06T10:08:57.517+0000] {standard_task_runner.py:90} INFO - Running: ['airflow', 'tasks', 'run', 'etl_landing', 'tg_salesorder.tg_process_salesorder.process_salesorder', 'scheduled__2025-06-05T00:00:00+00:00', '--job-id', '28', '--raw', '--subdir', 'DAGS_FOLDER/etl_landing/dag.py', '--cfg-path', '/tmp/tmp892lk0m1', '--map-index', '1']
[2025-06-06T10:08:57.576+0000] {standard_task_runner.py:91} INFO - Job 28: Subtask tg_salesorder.tg_process_salesorder.process_salesorder
[2025-06-06T10:08:58.624+0000] {task_command.py:426} INFO - Running <TaskInstance: etl_landing.tg_salesorder.tg_process_salesorder.process_salesorder scheduled__2025-06-05T00:00:00+00:00 map_index=1 [running]> on host b168fc67a480
[2025-06-06T10:08:59.817+0000] {taskinstance.py:2648} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='airflow' AIRFLOW_CTX_DAG_ID='etl_landing' AIRFLOW_CTX_TASK_ID='tg_salesorder.tg_process_salesorder.process_salesorder' AIRFLOW_CTX_EXECUTION_DATE='2025-06-05T00:00:00+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='scheduled__2025-06-05T00:00:00+00:00'
[2025-06-06T10:08:59.847+0000] {taskinstance.py:430} INFO - ::endgroup::
[2025-06-06T10:09:00.084+0000] {base.py:84} INFO - Using connection ID 'mysql_default' for task execution.
[2025-06-06T10:09:00.249+0000] {base.py:84} INFO - Using connection ID 'postgres_default' for task execution.
[2025-06-06T10:09:00.334+0000] {utils.py:114} INFO - Inserted batch 1 of 100 rows into lz.salesorder
[2025-06-06T10:09:00.348+0000] {utils.py:114} INFO - Inserted batch 2 of 100 rows into lz.salesorder
[2025-06-06T10:09:00.380+0000] {utils.py:114} INFO - Inserted batch 3 of 100 rows into lz.salesorder
[2025-06-06T10:09:00.401+0000] {utils.py:114} INFO - Inserted batch 4 of 100 rows into lz.salesorder
[2025-06-06T10:09:00.427+0000] {utils.py:114} INFO - Inserted batch 5 of 100 rows into lz.salesorder
[2025-06-06T10:09:00.513+0000] {base.py:84} INFO - Using connection ID 'postgres_default' for task execution.
[2025-06-06T10:09:00.575+0000] {utils.py:114} INFO - Inserted batch 1 of 100 rows into lz.salesorder
[2025-06-06T10:09:00.605+0000] {utils.py:114} INFO - Inserted batch 2 of 100 rows into lz.salesorder
[2025-06-06T10:09:00.623+0000] {utils.py:114} INFO - Inserted batch 3 of 100 rows into lz.salesorder
[2025-06-06T10:09:00.693+0000] {utils.py:114} INFO - Inserted batch 4 of 100 rows into lz.salesorder
[2025-06-06T10:09:00.785+0000] {utils.py:114} INFO - Inserted batch 5 of 100 rows into lz.salesorder
[2025-06-06T10:09:00.805+0000] {python.py:237} INFO - Done. Returned value was: Inserted SELECT DISTINCT s.*
            FROM ounass_source.salesorder s
                JOIN salesorderitem si
                ON si.order_id = s.id
            WHERE (si.modified_at >= %(load_range_start_time)s
                    AND si.modified_at < %(load_range_end_time)s)
                OR (s.modified_at >= %(load_range_start_time)s
                    AND s.modified_at < %(load_range_end_time)s)
            ORDER BY s.id
            LIMIT %(salesorder_limit)s OFFSET %(salesorder_offset)s rows for parameters {'var_chunk_size': '1000', 'var_page_size': '500', 'var_batch_size': '100', 'var_text_clean_regex': '([[:cntrl:]]|Ã‚|\xa0)+', 'load_range_start_time': datetime.datetime(2021, 7, 6, 0, 0), 'load_range_end_time': datetime.datetime(2021, 7, 7, 0, 0), 'salesorder_offset': 1000, 'salesorder_limit': 1000}
[2025-06-06T10:09:00.820+0000] {taskinstance.py:441} INFO - ::group::Post task execution logs
[2025-06-06T10:09:01.096+0000] {taskinstance.py:1206} INFO - Marking task as SUCCESS. dag_id=etl_landing, task_id=tg_salesorder.tg_process_salesorder.process_salesorder, run_id=scheduled__2025-06-05T00:00:00+00:00, map_index=1, execution_date=20250605T000000, start_date=20250606T100857, end_date=20250606T100901
[2025-06-06T10:09:01.370+0000] {local_task_job_runner.py:240} INFO - Task exited with return code 0
[2025-06-06T10:09:01.545+0000] {taskinstance.py:3498} INFO - 1 downstream tasks scheduled from follow-on schedule check
[2025-06-06T10:09:01.549+0000] {local_task_job_runner.py:222} INFO - ::endgroup::
