[2025-06-06T10:08:35.029+0000] {local_task_job_runner.py:120} INFO - ::group::Pre task execution logs
[2025-06-06T10:08:35.603+0000] {taskinstance.py:2076} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: etl_landing.tg_customer.tg_preprocess_customer.chunk_customer scheduled__2025-06-05T00:00:00+00:00 [queued]>
[2025-06-06T10:08:35.650+0000] {taskinstance.py:2076} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: etl_landing.tg_customer.tg_preprocess_customer.chunk_customer scheduled__2025-06-05T00:00:00+00:00 [queued]>
[2025-06-06T10:08:35.656+0000] {taskinstance.py:2306} INFO - Starting attempt 1 of 1
[2025-06-06T10:08:35.754+0000] {taskinstance.py:2330} INFO - Executing <Task(_PythonDecoratedOperator): tg_customer.tg_preprocess_customer.chunk_customer> on 2025-06-05 00:00:00+00:00
[2025-06-06T10:08:35.808+0000] {logging_mixin.py:188} WARNING - /home/airflow/.local/lib/python3.12/site-packages/airflow/task/task_runner/standard_task_runner.py:61 DeprecationWarning: This process (pid=247) is multi-threaded, use of fork() may lead to deadlocks in the child.
[2025-06-06T10:08:35.822+0000] {standard_task_runner.py:63} INFO - Started process 269 to run task
[2025-06-06T10:08:35.804+0000] {standard_task_runner.py:90} INFO - Running: ['airflow', 'tasks', 'run', 'etl_landing', 'tg_customer.tg_preprocess_customer.chunk_customer', 'scheduled__2025-06-05T00:00:00+00:00', '--job-id', '7', '--raw', '--subdir', 'DAGS_FOLDER/etl_landing/dag.py', '--cfg-path', '/tmp/tmpa2071pbc']
[2025-06-06T10:08:35.846+0000] {standard_task_runner.py:91} INFO - Job 7: Subtask tg_customer.tg_preprocess_customer.chunk_customer
[2025-06-06T10:08:36.151+0000] {task_command.py:426} INFO - Running <TaskInstance: etl_landing.tg_customer.tg_preprocess_customer.chunk_customer scheduled__2025-06-05T00:00:00+00:00 [running]> on host b168fc67a480
[2025-06-06T10:08:36.586+0000] {taskinstance.py:2648} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='airflow' AIRFLOW_CTX_DAG_ID='etl_landing' AIRFLOW_CTX_TASK_ID='tg_customer.tg_preprocess_customer.chunk_customer' AIRFLOW_CTX_EXECUTION_DATE='2025-06-05T00:00:00+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='scheduled__2025-06-05T00:00:00+00:00'
[2025-06-06T10:08:36.590+0000] {taskinstance.py:430} INFO - ::endgroup::
[2025-06-06T10:08:36.626+0000] {base.py:84} INFO - Using connection ID 'mysql_default' for task execution.
[2025-06-06T10:08:36.649+0000] {sql.py:470} INFO - Running statement: SELECT COUNT(*) AS count
                    FROM (
                        SELECT DISTINCT c.*
                        FROM ounass_source.customer c
                        JOIN salesorder s
                            ON s.customer_id = c.id
                        JOIN salesorderitem si
                            ON si.order_id = s.id
                        WHERE (s.modified_at >= %(start_time)s
                                AND s.modified_at < %(end_time)s)
                            OR (si.modified_at >= %(start_time)s
                                AND si.modified_at < %(end_time)s)
                    ) AS distinct_customer, parameters: {'start_time': datetime.datetime(2021, 7, 6, 0, 0), 'end_time': datetime.datetime(2021, 7, 7, 0, 0)}
[2025-06-06T10:08:36.857+0000] {sql.py:479} INFO - Rows affected: 1
[2025-06-06T10:08:36.933+0000] {chunking.py:84} INFO - Generated numeric chunks: [{'offset': 0, 'limit': 56}]
[2025-06-06T10:08:36.938+0000] {python.py:237} INFO - Done. Returned value was: [{'offset': 0, 'limit': 56}]
[2025-06-06T10:08:36.940+0000] {taskinstance.py:441} INFO - ::group::Post task execution logs
[2025-06-06T10:08:37.017+0000] {taskinstance.py:1206} INFO - Marking task as SUCCESS. dag_id=etl_landing, task_id=tg_customer.tg_preprocess_customer.chunk_customer, run_id=scheduled__2025-06-05T00:00:00+00:00, execution_date=20250605T000000, start_date=20250606T100835, end_date=20250606T100837
[2025-06-06T10:08:37.130+0000] {local_task_job_runner.py:240} INFO - Task exited with return code 0
[2025-06-06T10:08:37.176+0000] {local_task_job_runner.py:222} INFO - ::endgroup::
