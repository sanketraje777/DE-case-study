[2025-06-06T10:09:58.895+0000] {local_task_job_runner.py:120} INFO - ::group::Pre task execution logs
[2025-06-06T10:09:59.137+0000] {taskinstance.py:2076} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: etl_ods.tg_salesorder.tg_postprocess_salesorder.data_quality_check_salesorder manual__2025-06-06T10:09:16.601242+00:00 [queued]>
[2025-06-06T10:09:59.153+0000] {taskinstance.py:2076} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: etl_ods.tg_salesorder.tg_postprocess_salesorder.data_quality_check_salesorder manual__2025-06-06T10:09:16.601242+00:00 [queued]>
[2025-06-06T10:09:59.155+0000] {taskinstance.py:2306} INFO - Starting attempt 1 of 1
[2025-06-06T10:09:59.172+0000] {taskinstance.py:2330} INFO - Executing <Task(_PythonDecoratedOperator): tg_salesorder.tg_postprocess_salesorder.data_quality_check_salesorder> on 2025-06-06 10:09:16.601242+00:00
[2025-06-06T10:09:59.183+0000] {logging_mixin.py:188} WARNING - /home/airflow/.local/lib/python3.12/site-packages/airflow/task/task_runner/standard_task_runner.py:61 DeprecationWarning: This process (pid=529) is multi-threaded, use of fork() may lead to deadlocks in the child.
[2025-06-06T10:09:59.185+0000] {standard_task_runner.py:63} INFO - Started process 533 to run task
[2025-06-06T10:09:59.183+0000] {standard_task_runner.py:90} INFO - Running: ['airflow', 'tasks', 'run', 'etl_ods', 'tg_salesorder.tg_postprocess_salesorder.data_quality_check_salesorder', 'manual__2025-06-06T10:09:16.601242+00:00', '--job-id', '63', '--raw', '--subdir', 'DAGS_FOLDER/etl_ods/dag.py', '--cfg-path', '/tmp/tmpmm60mfws']
[2025-06-06T10:09:59.187+0000] {standard_task_runner.py:91} INFO - Job 63: Subtask tg_salesorder.tg_postprocess_salesorder.data_quality_check_salesorder
[2025-06-06T10:09:59.273+0000] {task_command.py:426} INFO - Running <TaskInstance: etl_ods.tg_salesorder.tg_postprocess_salesorder.data_quality_check_salesorder manual__2025-06-06T10:09:16.601242+00:00 [running]> on host b168fc67a480
[2025-06-06T10:09:59.435+0000] {taskinstance.py:2648} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='airflow' AIRFLOW_CTX_DAG_ID='etl_ods' AIRFLOW_CTX_TASK_ID='tg_salesorder.tg_postprocess_salesorder.data_quality_check_salesorder' AIRFLOW_CTX_EXECUTION_DATE='2025-06-06T10:09:16.601242+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='manual__2025-06-06T10:09:16.601242+00:00'
[2025-06-06T10:09:59.438+0000] {taskinstance.py:430} INFO - ::endgroup::
[2025-06-06T10:09:59.443+0000] {tasks.py:214} INFO - Loading SQL from file: /opt/airflow/sql/postgres_data_warehouse/ods/salesorder/ods_salesorder_data_quality_check.sql
[2025-06-06T10:09:59.469+0000] {tasks.py:221} INFO - processed query: -- Check 1: Row counts
SELECT 'salesorder' AS table_name, COUNT(*) AS row_count FROM ods.salesorder;

-- Check 2: Critical columns NOT NULL
SELECT COUNT(*) AS salesorder_order_number_nulls FROM ods.salesorder WHERE order_number IS NULL;
SELECT COUNT(*) AS salesorder_created_at_nulls FROM ods.salesorder WHERE created_at IS NULL;
SELECT COUNT(*) AS salesorder_modified_at_nulls FROM ods.salesorder WHERE modified_at IS NULL;

-- Check 3: Foreign key integrity
SELECT COUNT(*) AS orphaned_orders FROM ods.salesorder WHERE customer_id NOT IN (SELECT id FROM ods.customer);

-- Check 4: Unique constraints
SELECT order_number, COUNT(*) FROM ods.salesorder GROUP BY order_number HAVING COUNT(*) > 1;, parameters: {'target_schema': 'ods', 'target_table': 'salesorder'}
[2025-06-06T10:09:59.485+0000] {tasks.py:229} INFO - Split into 6 individual SQL statements
[2025-06-06T10:09:59.486+0000] {tasks.py:233} INFO - Executing:
-- Check 1: Row counts
SELECT 'salesorder' AS table_name, COUNT(*) AS row_count FROM ods.salesorder;
 with parameters: {'target_schema': 'ods', 'target_table': 'salesorder'}
[2025-06-06T10:09:59.503+0000] {base.py:84} INFO - Using connection ID 'postgres_default' for task execution.
[2025-06-06T10:09:59.512+0000] {sql.py:470} INFO - Running statement: -- Check 1: Row counts
SELECT 'salesorder' AS table_name, COUNT(*) AS row_count FROM ods.salesorder;, parameters: None
[2025-06-06T10:09:59.517+0000] {sql.py:479} INFO - Rows affected: 1
[2025-06-06T10:09:59.519+0000] {tasks.py:240} INFO - Result: [('salesorder', 4799)]
[2025-06-06T10:09:59.520+0000] {tasks.py:233} INFO - Executing:
-- Check 2: Critical columns NOT NULL
SELECT COUNT(*) AS salesorder_order_number_nulls FROM ods.salesorder WHERE order_number IS NULL;
 with parameters: {'target_schema': 'ods', 'target_table': 'salesorder'}
[2025-06-06T10:09:59.532+0000] {base.py:84} INFO - Using connection ID 'postgres_default' for task execution.
[2025-06-06T10:09:59.539+0000] {sql.py:470} INFO - Running statement: -- Check 2: Critical columns NOT NULL
SELECT COUNT(*) AS salesorder_order_number_nulls FROM ods.salesorder WHERE order_number IS NULL;, parameters: None
[2025-06-06T10:09:59.542+0000] {sql.py:479} INFO - Rows affected: 1
[2025-06-06T10:09:59.544+0000] {tasks.py:240} INFO - Result: [(0,)]
[2025-06-06T10:09:59.545+0000] {tasks.py:233} INFO - Executing:
SELECT COUNT(*) AS salesorder_created_at_nulls FROM ods.salesorder WHERE created_at IS NULL;
 with parameters: {'target_schema': 'ods', 'target_table': 'salesorder'}
[2025-06-06T10:09:59.557+0000] {base.py:84} INFO - Using connection ID 'postgres_default' for task execution.
[2025-06-06T10:09:59.564+0000] {sql.py:470} INFO - Running statement: SELECT COUNT(*) AS salesorder_created_at_nulls FROM ods.salesorder WHERE created_at IS NULL;, parameters: None
[2025-06-06T10:09:59.568+0000] {sql.py:479} INFO - Rows affected: 1
[2025-06-06T10:09:59.569+0000] {tasks.py:240} INFO - Result: [(0,)]
[2025-06-06T10:09:59.570+0000] {tasks.py:233} INFO - Executing:
SELECT COUNT(*) AS salesorder_modified_at_nulls FROM ods.salesorder WHERE modified_at IS NULL;
 with parameters: {'target_schema': 'ods', 'target_table': 'salesorder'}
[2025-06-06T10:09:59.581+0000] {base.py:84} INFO - Using connection ID 'postgres_default' for task execution.
[2025-06-06T10:09:59.590+0000] {sql.py:470} INFO - Running statement: SELECT COUNT(*) AS salesorder_modified_at_nulls FROM ods.salesorder WHERE modified_at IS NULL;, parameters: None
[2025-06-06T10:09:59.594+0000] {sql.py:479} INFO - Rows affected: 1
[2025-06-06T10:09:59.595+0000] {tasks.py:240} INFO - Result: [(0,)]
[2025-06-06T10:09:59.597+0000] {tasks.py:233} INFO - Executing:
-- Check 3: Foreign key integrity
SELECT COUNT(*) AS orphaned_orders FROM ods.salesorder WHERE customer_id NOT IN (SELECT id FROM ods.customer);
 with parameters: {'target_schema': 'ods', 'target_table': 'salesorder'}
[2025-06-06T10:09:59.614+0000] {base.py:84} INFO - Using connection ID 'postgres_default' for task execution.
[2025-06-06T10:09:59.623+0000] {sql.py:470} INFO - Running statement: -- Check 3: Foreign key integrity
SELECT COUNT(*) AS orphaned_orders FROM ods.salesorder WHERE customer_id NOT IN (SELECT id FROM ods.customer);, parameters: None
[2025-06-06T10:09:59.631+0000] {sql.py:479} INFO - Rows affected: 1
[2025-06-06T10:09:59.633+0000] {tasks.py:240} INFO - Result: [(0,)]
[2025-06-06T10:09:59.636+0000] {tasks.py:233} INFO - Executing:
-- Check 4: Unique constraints
SELECT order_number, COUNT(*) FROM ods.salesorder GROUP BY order_number HAVING COUNT(*) > 1;
 with parameters: {'target_schema': 'ods', 'target_table': 'salesorder'}
[2025-06-06T10:09:59.652+0000] {base.py:84} INFO - Using connection ID 'postgres_default' for task execution.
[2025-06-06T10:09:59.662+0000] {sql.py:470} INFO - Running statement: -- Check 4: Unique constraints
SELECT order_number, COUNT(*) FROM ods.salesorder GROUP BY order_number HAVING COUNT(*) > 1;, parameters: None
[2025-06-06T10:09:59.674+0000] {sql.py:479} INFO - Rows affected: 0
[2025-06-06T10:09:59.676+0000] {tasks.py:240} INFO - Result: []
[2025-06-06T10:09:59.678+0000] {python.py:237} INFO - Done. Returned value was: [[('salesorder', 4799)], [(0,)], [(0,)], [(0,)], [(0,)], []]
[2025-06-06T10:09:59.681+0000] {taskinstance.py:441} INFO - ::group::Post task execution logs
[2025-06-06T10:09:59.741+0000] {taskinstance.py:1206} INFO - Marking task as SUCCESS. dag_id=etl_ods, task_id=tg_salesorder.tg_postprocess_salesorder.data_quality_check_salesorder, run_id=manual__2025-06-06T10:09:16.601242+00:00, execution_date=20250606T100916, start_date=20250606T100959, end_date=20250606T100959
[2025-06-06T10:09:59.803+0000] {local_task_job_runner.py:240} INFO - Task exited with return code 0
[2025-06-06T10:09:59.821+0000] {local_task_job_runner.py:222} INFO - ::endgroup::
