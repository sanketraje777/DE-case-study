[2025-06-06T10:09:55.852+0000] {local_task_job_runner.py:120} INFO - ::group::Pre task execution logs
[2025-06-06T10:09:56.128+0000] {taskinstance.py:2076} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: etl_ods.tg_salesorder.tg_postprocess_salesorder.add_constraints_salesorder manual__2025-06-06T10:09:16.601242+00:00 [queued]>
[2025-06-06T10:09:56.148+0000] {taskinstance.py:2076} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: etl_ods.tg_salesorder.tg_postprocess_salesorder.add_constraints_salesorder manual__2025-06-06T10:09:16.601242+00:00 [queued]>
[2025-06-06T10:09:56.150+0000] {taskinstance.py:2306} INFO - Starting attempt 1 of 1
[2025-06-06T10:09:56.173+0000] {taskinstance.py:2330} INFO - Executing <Task(_PythonDecoratedOperator): tg_salesorder.tg_postprocess_salesorder.add_constraints_salesorder> on 2025-06-06 10:09:16.601242+00:00
[2025-06-06T10:09:56.186+0000] {logging_mixin.py:188} WARNING - /home/airflow/.local/lib/python3.12/site-packages/airflow/task/task_runner/standard_task_runner.py:61 DeprecationWarning: This process (pid=523) is multi-threaded, use of fork() may lead to deadlocks in the child.
[2025-06-06T10:09:56.188+0000] {standard_task_runner.py:63} INFO - Started process 528 to run task
[2025-06-06T10:09:56.187+0000] {standard_task_runner.py:90} INFO - Running: ['airflow', 'tasks', 'run', 'etl_ods', 'tg_salesorder.tg_postprocess_salesorder.add_constraints_salesorder', 'manual__2025-06-06T10:09:16.601242+00:00', '--job-id', '61', '--raw', '--subdir', 'DAGS_FOLDER/etl_ods/dag.py', '--cfg-path', '/tmp/tmpp3khqjny']
[2025-06-06T10:09:56.190+0000] {standard_task_runner.py:91} INFO - Job 61: Subtask tg_salesorder.tg_postprocess_salesorder.add_constraints_salesorder
[2025-06-06T10:09:56.287+0000] {task_command.py:426} INFO - Running <TaskInstance: etl_ods.tg_salesorder.tg_postprocess_salesorder.add_constraints_salesorder manual__2025-06-06T10:09:16.601242+00:00 [running]> on host b168fc67a480
[2025-06-06T10:09:56.535+0000] {taskinstance.py:2648} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='airflow' AIRFLOW_CTX_DAG_ID='etl_ods' AIRFLOW_CTX_TASK_ID='tg_salesorder.tg_postprocess_salesorder.add_constraints_salesorder' AIRFLOW_CTX_EXECUTION_DATE='2025-06-06T10:09:16.601242+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='manual__2025-06-06T10:09:16.601242+00:00'
[2025-06-06T10:09:56.540+0000] {taskinstance.py:430} INFO - ::endgroup::
[2025-06-06T10:09:56.550+0000] {tasks.py:214} INFO - Loading SQL from file: /opt/airflow/sql/postgres_data_warehouse/ods/salesorder/ods_create_salesorder_constraints_indexes.sql
[2025-06-06T10:09:56.596+0000] {tasks.py:221} INFO - processed query: ALTER TABLE ods.salesorder 
    ADD CONSTRAINT salesorder_pkey PRIMARY KEY (id);
ALTER TABLE ods.salesorder 
    ADD CONSTRAINT salesorder_customer_id_fkey FOREIGN KEY (customer_id) REFERENCES ods.customer(id) 
        ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE ods.salesorder 
    ADD CONSTRAINT salesorder_order_number_key UNIQUE (order_number);
-- Create indexes for salesorder
CREATE INDEX IF NOT EXISTS 
    idx_salesorder_customer_id ON ods.salesorder(customer_id);
CREATE INDEX IF NOT EXISTS
    idx_salesorder_modified_at ON ods.salesorder(modified_at);, parameters: {'target_schema': 'ods', 'target_table': 'salesorder'}
[2025-06-06T10:09:56.629+0000] {tasks.py:229} INFO - Split into 5 individual SQL statements
[2025-06-06T10:09:56.630+0000] {tasks.py:233} INFO - Executing:
ALTER TABLE ods.salesorder 
    ADD CONSTRAINT salesorder_pkey PRIMARY KEY (id);
 with parameters: {'target_schema': 'ods', 'target_table': 'salesorder'}
[2025-06-06T10:09:56.653+0000] {base.py:84} INFO - Using connection ID 'postgres_default' for task execution.
[2025-06-06T10:09:56.662+0000] {sql.py:470} INFO - Running statement: ALTER TABLE ods.salesorder 
    ADD CONSTRAINT salesorder_pkey PRIMARY KEY (id);, parameters: None
[2025-06-06T10:09:56.685+0000] {tasks.py:233} INFO - Executing:
ALTER TABLE ods.salesorder 
    ADD CONSTRAINT salesorder_customer_id_fkey FOREIGN KEY (customer_id) REFERENCES ods.customer(id) 
        ON DELETE CASCADE ON UPDATE CASCADE;
 with parameters: {'target_schema': 'ods', 'target_table': 'salesorder'}
[2025-06-06T10:09:56.700+0000] {base.py:84} INFO - Using connection ID 'postgres_default' for task execution.
[2025-06-06T10:09:56.711+0000] {sql.py:470} INFO - Running statement: ALTER TABLE ods.salesorder 
    ADD CONSTRAINT salesorder_customer_id_fkey FOREIGN KEY (customer_id) REFERENCES ods.customer(id) 
        ON DELETE CASCADE ON UPDATE CASCADE;, parameters: None
[2025-06-06T10:09:56.721+0000] {tasks.py:233} INFO - Executing:
ALTER TABLE ods.salesorder 
    ADD CONSTRAINT salesorder_order_number_key UNIQUE (order_number);
 with parameters: {'target_schema': 'ods', 'target_table': 'salesorder'}
[2025-06-06T10:09:56.737+0000] {base.py:84} INFO - Using connection ID 'postgres_default' for task execution.
[2025-06-06T10:09:56.746+0000] {sql.py:470} INFO - Running statement: ALTER TABLE ods.salesorder 
    ADD CONSTRAINT salesorder_order_number_key UNIQUE (order_number);, parameters: None
[2025-06-06T10:09:56.767+0000] {tasks.py:233} INFO - Executing:
-- Create indexes for salesorder
CREATE INDEX IF NOT EXISTS 
    idx_salesorder_customer_id ON ods.salesorder(customer_id);
 with parameters: {'target_schema': 'ods', 'target_table': 'salesorder'}
[2025-06-06T10:09:56.783+0000] {base.py:84} INFO - Using connection ID 'postgres_default' for task execution.
[2025-06-06T10:09:56.793+0000] {sql.py:470} INFO - Running statement: -- Create indexes for salesorder
CREATE INDEX IF NOT EXISTS 
    idx_salesorder_customer_id ON ods.salesorder(customer_id);, parameters: None
[2025-06-06T10:09:56.809+0000] {tasks.py:233} INFO - Executing:
CREATE INDEX IF NOT EXISTS
    idx_salesorder_modified_at ON ods.salesorder(modified_at);
 with parameters: {'target_schema': 'ods', 'target_table': 'salesorder'}
[2025-06-06T10:09:56.825+0000] {base.py:84} INFO - Using connection ID 'postgres_default' for task execution.
[2025-06-06T10:09:56.834+0000] {sql.py:470} INFO - Running statement: CREATE INDEX IF NOT EXISTS
    idx_salesorder_modified_at ON ods.salesorder(modified_at);, parameters: None
[2025-06-06T10:09:56.855+0000] {python.py:237} INFO - Done. Returned value was: [None, None, None, None, None]
[2025-06-06T10:09:56.856+0000] {taskinstance.py:441} INFO - ::group::Post task execution logs
[2025-06-06T10:09:56.914+0000] {taskinstance.py:1206} INFO - Marking task as SUCCESS. dag_id=etl_ods, task_id=tg_salesorder.tg_postprocess_salesorder.add_constraints_salesorder, run_id=manual__2025-06-06T10:09:16.601242+00:00, execution_date=20250606T100916, start_date=20250606T100956, end_date=20250606T100956
[2025-06-06T10:09:56.967+0000] {local_task_job_runner.py:240} INFO - Task exited with return code 0
[2025-06-06T10:09:57.165+0000] {taskinstance.py:3498} INFO - 2 downstream tasks scheduled from follow-on schedule check
[2025-06-06T10:09:57.169+0000] {local_task_job_runner.py:222} INFO - ::endgroup::
