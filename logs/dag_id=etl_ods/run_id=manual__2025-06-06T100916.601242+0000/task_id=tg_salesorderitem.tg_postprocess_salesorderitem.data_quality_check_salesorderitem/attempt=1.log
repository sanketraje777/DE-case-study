[2025-06-06T10:10:04.032+0000] {local_task_job_runner.py:120} INFO - ::group::Pre task execution logs
[2025-06-06T10:10:04.242+0000] {taskinstance.py:2076} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: etl_ods.tg_salesorderitem.tg_postprocess_salesorderitem.data_quality_check_salesorderitem manual__2025-06-06T10:09:16.601242+00:00 [queued]>
[2025-06-06T10:10:04.255+0000] {taskinstance.py:2076} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: etl_ods.tg_salesorderitem.tg_postprocess_salesorderitem.data_quality_check_salesorderitem manual__2025-06-06T10:09:16.601242+00:00 [queued]>
[2025-06-06T10:10:04.257+0000] {taskinstance.py:2306} INFO - Starting attempt 1 of 1
[2025-06-06T10:10:04.273+0000] {taskinstance.py:2330} INFO - Executing <Task(_PythonDecoratedOperator): tg_salesorderitem.tg_postprocess_salesorderitem.data_quality_check_salesorderitem> on 2025-06-06 10:09:16.601242+00:00
[2025-06-06T10:10:04.283+0000] {logging_mixin.py:188} WARNING - /home/airflow/.local/lib/python3.12/site-packages/airflow/task/task_runner/standard_task_runner.py:61 DeprecationWarning: This process (pid=541) is multi-threaded, use of fork() may lead to deadlocks in the child.
[2025-06-06T10:10:04.285+0000] {standard_task_runner.py:63} INFO - Started process 543 to run task
[2025-06-06T10:10:04.283+0000] {standard_task_runner.py:90} INFO - Running: ['airflow', 'tasks', 'run', 'etl_ods', 'tg_salesorderitem.tg_postprocess_salesorderitem.data_quality_check_salesorderitem', 'manual__2025-06-06T10:09:16.601242+00:00', '--job-id', '67', '--raw', '--subdir', 'DAGS_FOLDER/etl_ods/dag.py', '--cfg-path', '/tmp/tmpfvcpjyf8']
[2025-06-06T10:10:04.286+0000] {standard_task_runner.py:91} INFO - Job 67: Subtask tg_salesorderitem.tg_postprocess_salesorderitem.data_quality_check_salesorderitem
[2025-06-06T10:10:04.347+0000] {task_command.py:426} INFO - Running <TaskInstance: etl_ods.tg_salesorderitem.tg_postprocess_salesorderitem.data_quality_check_salesorderitem manual__2025-06-06T10:09:16.601242+00:00 [running]> on host b168fc67a480
[2025-06-06T10:10:04.462+0000] {taskinstance.py:2648} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='airflow' AIRFLOW_CTX_DAG_ID='etl_ods' AIRFLOW_CTX_TASK_ID='tg_salesorderitem.tg_postprocess_salesorderitem.data_quality_check_salesorderitem' AIRFLOW_CTX_EXECUTION_DATE='2025-06-06T10:09:16.601242+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='manual__2025-06-06T10:09:16.601242+00:00'
[2025-06-06T10:10:04.464+0000] {taskinstance.py:430} INFO - ::endgroup::
[2025-06-06T10:10:04.470+0000] {tasks.py:214} INFO - Loading SQL from file: /opt/airflow/sql/postgres_data_warehouse/ods/salesorderitem/ods_salesorderitem_data_quality_check.sql
[2025-06-06T10:10:04.494+0000] {tasks.py:221} INFO - processed query: -- Check 1: Row counts
SELECT 'salesorderitem' AS table_name, COUNT(*) AS row_count FROM ods.salesorderitem;

-- Check 2: Critical columns NOT NULL
SELECT COUNT(*) AS salesorderitem_qty_ordered_negative FROM ods.salesorderitem WHERE qty_ordered < 0;
SELECT COUNT(*) AS salesorderitem_price_negative FROM ods.salesorderitem WHERE price < 0;
SELECT COUNT(*) AS salesorderitem_line_total_negative FROM ods.salesorderitem WHERE line_total < 0;

-- Check 3: Foreign key integrity
SELECT COUNT(*) AS orphaned_salesorderitem_orders FROM ods.salesorderitem WHERE order_id NOT IN (SELECT id FROM ods.salesorder);
SELECT COUNT(*) AS orphaned_salesorderitem_products FROM ods.salesorderitem WHERE product_id NOT IN (SELECT product_id FROM ods.product);, parameters: {'target_schema': 'ods', 'target_table': 'salesorderitem'}
[2025-06-06T10:10:04.509+0000] {tasks.py:229} INFO - Split into 6 individual SQL statements
[2025-06-06T10:10:04.509+0000] {tasks.py:233} INFO - Executing:
-- Check 1: Row counts
SELECT 'salesorderitem' AS table_name, COUNT(*) AS row_count FROM ods.salesorderitem;
 with parameters: {'target_schema': 'ods', 'target_table': 'salesorderitem'}
[2025-06-06T10:10:04.522+0000] {base.py:84} INFO - Using connection ID 'postgres_default' for task execution.
[2025-06-06T10:10:04.528+0000] {sql.py:470} INFO - Running statement: -- Check 1: Row counts
SELECT 'salesorderitem' AS table_name, COUNT(*) AS row_count FROM ods.salesorderitem;, parameters: None
[2025-06-06T10:10:04.531+0000] {sql.py:479} INFO - Rows affected: 1
[2025-06-06T10:10:04.532+0000] {tasks.py:240} INFO - Result: [('salesorderitem', 7684)]
[2025-06-06T10:10:04.533+0000] {tasks.py:233} INFO - Executing:
-- Check 2: Critical columns NOT NULL
SELECT COUNT(*) AS salesorderitem_qty_ordered_negative FROM ods.salesorderitem WHERE qty_ordered < 0;
 with parameters: {'target_schema': 'ods', 'target_table': 'salesorderitem'}
[2025-06-06T10:10:04.541+0000] {base.py:84} INFO - Using connection ID 'postgres_default' for task execution.
[2025-06-06T10:10:04.547+0000] {sql.py:470} INFO - Running statement: -- Check 2: Critical columns NOT NULL
SELECT COUNT(*) AS salesorderitem_qty_ordered_negative FROM ods.salesorderitem WHERE qty_ordered < 0;, parameters: None
[2025-06-06T10:10:04.550+0000] {sql.py:479} INFO - Rows affected: 1
[2025-06-06T10:10:04.551+0000] {tasks.py:240} INFO - Result: [(0,)]
[2025-06-06T10:10:04.552+0000] {tasks.py:233} INFO - Executing:
SELECT COUNT(*) AS salesorderitem_price_negative FROM ods.salesorderitem WHERE price < 0;
 with parameters: {'target_schema': 'ods', 'target_table': 'salesorderitem'}
[2025-06-06T10:10:04.560+0000] {base.py:84} INFO - Using connection ID 'postgres_default' for task execution.
[2025-06-06T10:10:04.566+0000] {sql.py:470} INFO - Running statement: SELECT COUNT(*) AS salesorderitem_price_negative FROM ods.salesorderitem WHERE price < 0;, parameters: None
[2025-06-06T10:10:04.570+0000] {sql.py:479} INFO - Rows affected: 1
[2025-06-06T10:10:04.571+0000] {tasks.py:240} INFO - Result: [(0,)]
[2025-06-06T10:10:04.572+0000] {tasks.py:233} INFO - Executing:
SELECT COUNT(*) AS salesorderitem_line_total_negative FROM ods.salesorderitem WHERE line_total < 0;
 with parameters: {'target_schema': 'ods', 'target_table': 'salesorderitem'}
[2025-06-06T10:10:04.580+0000] {base.py:84} INFO - Using connection ID 'postgres_default' for task execution.
[2025-06-06T10:10:04.585+0000] {sql.py:470} INFO - Running statement: SELECT COUNT(*) AS salesorderitem_line_total_negative FROM ods.salesorderitem WHERE line_total < 0;, parameters: None
[2025-06-06T10:10:04.589+0000] {sql.py:479} INFO - Rows affected: 1
[2025-06-06T10:10:04.590+0000] {tasks.py:240} INFO - Result: [(0,)]
[2025-06-06T10:10:04.590+0000] {tasks.py:233} INFO - Executing:
-- Check 3: Foreign key integrity
SELECT COUNT(*) AS orphaned_salesorderitem_orders FROM ods.salesorderitem WHERE order_id NOT IN (SELECT id FROM ods.salesorder);
 with parameters: {'target_schema': 'ods', 'target_table': 'salesorderitem'}
[2025-06-06T10:10:04.598+0000] {base.py:84} INFO - Using connection ID 'postgres_default' for task execution.
[2025-06-06T10:10:04.603+0000] {sql.py:470} INFO - Running statement: -- Check 3: Foreign key integrity
SELECT COUNT(*) AS orphaned_salesorderitem_orders FROM ods.salesorderitem WHERE order_id NOT IN (SELECT id FROM ods.salesorder);, parameters: None
[2025-06-06T10:10:04.609+0000] {sql.py:479} INFO - Rows affected: 1
[2025-06-06T10:10:04.610+0000] {tasks.py:240} INFO - Result: [(0,)]
[2025-06-06T10:10:04.611+0000] {tasks.py:233} INFO - Executing:
SELECT COUNT(*) AS orphaned_salesorderitem_products FROM ods.salesorderitem WHERE product_id NOT IN (SELECT product_id FROM ods.product);
 with parameters: {'target_schema': 'ods', 'target_table': 'salesorderitem'}
[2025-06-06T10:10:04.619+0000] {base.py:84} INFO - Using connection ID 'postgres_default' for task execution.
[2025-06-06T10:10:04.624+0000] {sql.py:470} INFO - Running statement: SELECT COUNT(*) AS orphaned_salesorderitem_products FROM ods.salesorderitem WHERE product_id NOT IN (SELECT product_id FROM ods.product);, parameters: None
[2025-06-06T10:10:04.630+0000] {sql.py:479} INFO - Rows affected: 1
[2025-06-06T10:10:04.632+0000] {tasks.py:240} INFO - Result: [(0,)]
[2025-06-06T10:10:04.633+0000] {python.py:237} INFO - Done. Returned value was: [[('salesorderitem', 7684)], [(0,)], [(0,)], [(0,)], [(0,)], [(0,)]]
[2025-06-06T10:10:04.634+0000] {taskinstance.py:441} INFO - ::group::Post task execution logs
[2025-06-06T10:10:04.661+0000] {taskinstance.py:1206} INFO - Marking task as SUCCESS. dag_id=etl_ods, task_id=tg_salesorderitem.tg_postprocess_salesorderitem.data_quality_check_salesorderitem, run_id=manual__2025-06-06T10:09:16.601242+00:00, execution_date=20250606T100916, start_date=20250606T101004, end_date=20250606T101004
[2025-06-06T10:10:04.701+0000] {local_task_job_runner.py:240} INFO - Task exited with return code 0
[2025-06-06T10:10:04.734+0000] {taskinstance.py:3498} INFO - 1 downstream tasks scheduled from follow-on schedule check
[2025-06-06T10:10:04.737+0000] {local_task_job_runner.py:222} INFO - ::endgroup::
