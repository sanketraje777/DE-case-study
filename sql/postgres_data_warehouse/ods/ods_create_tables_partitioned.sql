-- Customer Table
CREATE TABLE IF NOT EXISTS ods.customer (
  id INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  first_name VARCHAR(100) NOT NULL,
  last_name VARCHAR(100) NOT NULL,
  gender VARCHAR(10) CHECK (gender IN ('Female', 'Male')),
  email VARCHAR(255) NOT NULL 
    CHECK (email ~* '^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,}$'),
  billing_address TEXT,
  shipping_address TEXT NOT NULL
) PARTITION BY HASH (id);

-- create child partitions
DO $$
BEGIN
  FOR i IN 0..15 LOOP
    EXECUTE format($sql$
      CREATE TABLE IF NOT EXISTS ods.customer_p%1$s
      PARTITION OF ods.customer
      FOR VALUES WITH (MODULUS 16, REMAINDER %1$s);
    $sql$, i);
  END LOOP;
END;
$$;

-- Sales Order Table
CREATE TABLE IF NOT EXISTS ods.salesorder (
  id INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  customer_id INT NOT NULL,
  order_number VARCHAR(50) UNIQUE NOT NULL,
  created_at TIMESTAMP WITH TIME ZONE NOT NULL,
  modified_at TIMESTAMP WITH TIME ZONE NOT NULL CHECK (modified_at >= created_at),
  order_total NUMERIC(10, 2) NOT NULL CHECK (order_total >= 0),
  total_qty_ordered INT NOT NULL CHECK (total_qty_ordered >= 0)
  -- FOREIGN KEY (customer_id) REFERENCES ods.customer(id) ON DELETE CASCADE ON UPDATE CASCADE
) PARTITION BY HASH (id);

-- create child partitions
DO $$
BEGIN
  FOR i IN 0..15 LOOP
    EXECUTE format($sql$
      CREATE TABLE IF NOT EXISTS ods.salesorder_p%1$s
      PARTITION OF ods.salesorder
      FOR VALUES WITH (MODULUS 16, REMAINDER %1$s);
    $sql$, i);
  END LOOP;
END;
$$;

-- Product Table
CREATE TABLE IF NOT EXISTS ods.product (
  product_id INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  product_sku VARCHAR(50) UNIQUE NOT NULL,
  product_name VARCHAR(255) NOT NULL
) PARTITION BY HASH (product_id);

-- create child partitions
DO $$
BEGIN
  FOR i IN 0..15 LOOP
    EXECUTE format($sql$
      CREATE TABLE IF NOT EXISTS ods.product_p%1$s
      PARTITION OF ods.product
      FOR VALUES WITH (MODULUS 16, REMAINDER %1$s);
    $sql$, i);
  END LOOP;
END;
$$;

-- Sales Order Item Table
CREATE TABLE IF NOT EXISTS ods.salesorderitem (
  item_id INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  order_id INT NOT NULL,
  product_id INT NOT NULL,
  qty_ordered INT NOT NULL CHECK (qty_ordered >= 0),
  price NUMERIC(10, 2) NOT NULL CHECK (price >= 0),
  line_total NUMERIC(12, 2) NOT NULL CHECK (line_total >= 0),
  created_at TIMESTAMP WITH TIME ZONE NOT NULL,
  modified_at TIMESTAMP WITH TIME ZONE NOT NULL CHECK (modified_at >= created_at)
  -- FOREIGN KEY (order_id) REFERENCES ods.salesorder(id) ON DELETE CASCADE ON UPDATE CASCADE,
  -- FOREIGN KEY (product_id) REFERENCES ods.product(product_id) ON DELETE CASCADE ON UPDATE CASCADE
) PARTITION BY HASH (item_id);

-- create child partitions
DO $$
BEGIN
  FOR i IN 0..15 LOOP
    EXECUTE format($sql$
      CREATE TABLE IF NOT EXISTS ods.salesorderitem_p%1$s
      PARTITION OF ods.salesorderitem
      FOR VALUES WITH (MODULUS 16, REMAINDER %1$s);
    $sql$, i);
  END LOOP;
END;
$$;
