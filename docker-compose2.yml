services:

  db-mysql:
    image: mysql:5.7
    container_name: mysql_db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root123
      MYSQL_DATABASE: ounass_source
      MYSQL_USER: user
      MYSQL_PASSWORD: db123
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - etl_network

  db-postgres:
    image: postgres:13
    container_name: postgres_dw
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: pg123
      POSTGRES_DB: data_warehouse
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - etl_network

  airflow:
    image: apache/airflow:2.9.1
    container_name: airflow
    depends_on:
      - db-mysql
      - db-postgres
    restart: always
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://postgres:pg123@db-postgres:5432/data_warehouse
      AIRFLOW__CORE__LOAD_EXAMPLES: "False"
      AIRFLOW__API__AUTH_BACKENDS: "airflow.api.auth.backend.session"
      AIRFLOW__WEBSERVER__RBAC: "True"
      _AIRFLOW_WWW_USER_USERNAME: admin
      _AIRFLOW_WWW_USER_PASSWORD: admin
      _AIRFLOW_WWW_USER_FIRSTNAME: Admin
      _AIRFLOW_WWW_USER_LASTNAME: User
      _AIRFLOW_WWW_USER_ROLE: Admin
      _AIRFLOW_WWW_USER_EMAIL: admin@example.com
    ports:
      - "8080:8080"
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - ./requirements.txt:/requirements.txt
    command: >
      bash -c "
        pip install -r /requirements.txt &&
        airflow db migrate &&
        airflow users create \
          --username \$${_AIRFLOW_WWW_USER_USERNAME} \
          --password \$${_AIRFLOW_WWW_USER_PASSWORD} \
          --firstname \$${_AIRFLOW_WWW_USER_FIRSTNAME} \
          --lastname \$${_AIRFLOW_WWW_USER_LASTNAME} \
          --role \$${_AIRFLOW_WWW_USER_ROLE} \
          --email \$${_AIRFLOW_WWW_USER_EMAIL} || true &&
        airflow scheduler & airflow webserver
      "

volumes:
  mysql_data:
  postgres_data:

networks:
  etl_network:
    driver: bridge
